// Generated by CoffeeScript 2.0.0-beta2
'use strict';
var Generator, chalk, mkdirp, yosay;

Generator = require('yeoman-generator');

chalk = require('chalk');

yosay = require('yosay');

mkdirp = require('mkdirp');

module.exports = class extends Generator {
  prompting() {
    var prompts;
    this.log(yosay(`Welcome to the doozie ${chalk.red('generator-puelkin')} generator!`));
    prompts = [
      {
        type: 'confirm',
        name: 'someAnswer',
        message: 'Would you like to enable this option?',
        default: true
      }, {
        type: 'input',
        name: 'componentName',
        message: 'Do we start with a custom component? say the name',
        default: 'my-componente'
      }, {
        type: 'input',
        name: 'componentNameCamel',
        message: 'I am somhow stupid right now, can you camel case it for me?',
        default: 'myComponente'
      }
    ];
    return this.prompt(prompts).then((props) => {
      return this.props = props;
    });
  }

  writing() {
    mkdirp.sync(this.destinationPath('opinionated/src'));
    this.log(yosay(` componente ${this.props['componentName']}`));
    mkdirp.sync(this.destinationPath(`opinionated/src/${this.props['componentName']}`));
    this.log(yosay("yes!"));
    this.fs.copyTpl(this.templatePath('component.pug.ejs'), this.destinationPath(`opinionated/src/${this.props['componentName']}/${this.props['componentName']}.pug`), this.props);
    this.fs.copyTpl(this.templatePath('component.styl.ejs'), this.destinationPath(`opinionated/src/${this.props['componentName']}/${this.props['componentName']}.styl`), this.props);
    return this.fs.copyTpl(this.templatePath('component.coffee.ejs'), this.destinationPath(`opinionated/src/${this.props['componentName']}/${this.props['componentName']}.coffee`), this.props);
  }

  install() {
    this.log(yosay("what the frack!"));
    return this.npmInstall(['pug', 'stylus', 'coffeescript@next', 'jstransformer-stylus'], {
      'save-dev': true
    });
  }

};
